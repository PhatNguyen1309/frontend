{"ast":null,"code":"import axios from 'axios';\nimport { ADD_TO_CART, REMOVE_ITEM_CART, SAVE_SHIPPING_INFO } from '../constants/cartConstants';\nexport const addItemToCart = (id, quantity, crust, size) => async (dispatch, getState) => {\n  try {\n    const {\n      data\n    } = await axios.get(`/api/v1/product/${id}`); // Tính toán giá mới nếu kích thước là 12 inch\n\n    const newPrice = size === '12 inch' ? data.product.price * 1.3 : data.product.price;\n    dispatch({\n      type: ADD_TO_CART,\n      payload: {\n        product: data.product._id,\n        name: data.product.name,\n        price: newPrice,\n        // Dùng giá mới đã tính toán\n        image: data.product.images[0].url,\n        stock: data.product.stock,\n        quantity,\n        size,\n        // Lưu kích thước vào giỏ hàng\n        crust // Lưu đế vào giỏ hàng\n\n      }\n    }); // Lưu giỏ hàng vào localStorage\n\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n  } catch (error) {\n    console.error(\"Error adding item to cart:\", error); // Bạn có thể dispatch một hành động để lưu lỗi nếu cần thiết\n  }\n};\nexport const removeItemFromCart = id => async (dispatch, getState) => {\n  dispatch({\n    type: REMOVE_ITEM_CART,\n    payload: id\n  }); // Lưu lại giỏ hàng sau khi xóa\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n};\nexport const saveShippingInfo = data => async dispatch => {\n  dispatch({\n    type: SAVE_SHIPPING_INFO,\n    payload: data\n  });\n  localStorage.setItem('shippingInfo', JSON.stringify(data));\n};","map":{"version":3,"sources":["C:/Users/This PC/OneDrive/Desktop/doan/doan/doan_tiemPizza/frontend/src/actions/cartActions.js"],"names":["axios","ADD_TO_CART","REMOVE_ITEM_CART","SAVE_SHIPPING_INFO","addItemToCart","id","quantity","crust","size","dispatch","getState","data","get","newPrice","product","price","type","payload","_id","name","image","images","url","stock","localStorage","setItem","JSON","stringify","cart","cartItems","error","console","removeItemFromCart","saveShippingInfo"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,gBAAtB,EAAwCC,kBAAxC,QAAkE,4BAAlE;AAEA,OAAO,MAAMC,aAAa,GAAG,CAACC,EAAD,EAAKC,QAAL,EAAeC,KAAf,EAAsBC,IAAtB,KAA+B,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACtF,MAAI;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMX,KAAK,CAACY,GAAN,CAAW,mBAAkBP,EAAG,EAAhC,CAAvB,CADA,CAGA;;AACA,UAAMQ,QAAQ,GAAGL,IAAI,KAAK,SAAT,GAAqBG,IAAI,CAACG,OAAL,CAAaC,KAAb,GAAqB,GAA1C,GAAgDJ,IAAI,CAACG,OAAL,CAAaC,KAA9E;AAEAN,IAAAA,QAAQ,CAAC;AACLO,MAAAA,IAAI,EAAEf,WADD;AAELgB,MAAAA,OAAO,EAAE;AACLH,QAAAA,OAAO,EAAEH,IAAI,CAACG,OAAL,CAAaI,GADjB;AAELC,QAAAA,IAAI,EAAER,IAAI,CAACG,OAAL,CAAaK,IAFd;AAGLJ,QAAAA,KAAK,EAAEF,QAHF;AAGa;AAClBO,QAAAA,KAAK,EAAET,IAAI,CAACG,OAAL,CAAaO,MAAb,CAAoB,CAApB,EAAuBC,GAJzB;AAKLC,QAAAA,KAAK,EAAEZ,IAAI,CAACG,OAAL,CAAaS,KALf;AAMLjB,QAAAA,QANK;AAOLE,QAAAA,IAPK;AAOE;AACPD,QAAAA,KARK,CAQG;;AARH;AAFJ,KAAD,CAAR,CANA,CAoBA;;AACAiB,IAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAejB,QAAQ,GAAGkB,IAAX,CAAgBC,SAA/B,CAAlC;AACH,GAtBD,CAsBE,OAAOC,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACD,KAAR,CAAc,4BAAd,EAA4CA,KAA5C,EADY,CAEZ;AACH;AACJ,CA3BM;AA6BP,OAAO,MAAME,kBAAkB,GAAI3B,EAAD,IAAQ,OAAOI,QAAP,EAAiBC,QAAjB,KAA8B;AACpED,EAAAA,QAAQ,CAAC;AACLO,IAAAA,IAAI,EAAEd,gBADD;AAELe,IAAAA,OAAO,EAAEZ;AAFJ,GAAD,CAAR,CADoE,CAMpE;;AACAmB,EAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAejB,QAAQ,GAAGkB,IAAX,CAAgBC,SAA/B,CAAlC;AACH,CARM;AAUP,OAAO,MAAMI,gBAAgB,GAAItB,IAAD,IAAU,MAAOF,QAAP,IAAoB;AAC1DA,EAAAA,QAAQ,CAAC;AACLO,IAAAA,IAAI,EAAEb,kBADD;AAELc,IAAAA,OAAO,EAAEN;AAFJ,GAAD,CAAR;AAKAa,EAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCC,IAAI,CAACC,SAAL,CAAehB,IAAf,CAArC;AACH,CAPM","sourcesContent":["import axios from 'axios';\nimport { ADD_TO_CART, REMOVE_ITEM_CART, SAVE_SHIPPING_INFO } from '../constants/cartConstants';\n\nexport const addItemToCart = (id, quantity, crust, size) => async (dispatch, getState) => {\n    try {\n        const { data } = await axios.get(`/api/v1/product/${id}`);\n\n        // Tính toán giá mới nếu kích thước là 12 inch\n        const newPrice = size === '12 inch' ? data.product.price * 1.3 : data.product.price;\n\n        dispatch({\n            type: ADD_TO_CART,\n            payload: {\n                product: data.product._id,\n                name: data.product.name,\n                price: newPrice,  // Dùng giá mới đã tính toán\n                image: data.product.images[0].url,\n                stock: data.product.stock,\n                quantity,\n                size,  // Lưu kích thước vào giỏ hàng\n                crust,  // Lưu đế vào giỏ hàng\n            }\n        });\n\n        // Lưu giỏ hàng vào localStorage\n        localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n    } catch (error) {\n        console.error(\"Error adding item to cart:\", error);\n        // Bạn có thể dispatch một hành động để lưu lỗi nếu cần thiết\n    }\n}\n\nexport const removeItemFromCart = (id) => async (dispatch, getState) => {\n    dispatch({\n        type: REMOVE_ITEM_CART,\n        payload: id\n    });\n\n    // Lưu lại giỏ hàng sau khi xóa\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n}\n\nexport const saveShippingInfo = (data) => async (dispatch) => {\n    dispatch({\n        type: SAVE_SHIPPING_INFO,\n        payload: data\n    });\n\n    localStorage.setItem('shippingInfo', JSON.stringify(data));\n}"]},"metadata":{},"sourceType":"module"}