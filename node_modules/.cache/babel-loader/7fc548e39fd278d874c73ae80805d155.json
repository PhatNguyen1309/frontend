{"ast":null,"code":"import axios from 'axios';\nimport { ADD_TO_CART, REMOVE_ITEM_CART, SAVE_SHIPPING_INFO } from '../constants/cartConstants';\nexport const addItemToCart = (id, quantity, size) => async (dispatch, getState) => {\n  try {\n    const {\n      data\n    } = await axios.get(`/api/v1/product/${id}`); // Tính toán giá mới nếu kích thước là 12 inch\n\n    const newPrice = size === '12 inch' ? data.product.price * 1.3 : data.product.price; // Kiểm tra xem sản phẩm đã có trong giỏ hàng chưa, nếu có thì cập nhật số lượng\n\n    const existingItem = getState().cart.cartItems.find(item => item.product === id);\n\n    if (existingItem) {\n      // Nếu sản phẩm đã có trong giỏ hàng, cập nhật số lượng và giá mới\n      const updatedQuantity = existingItem.quantity + quantity; // Cộng thêm số lượng vào giỏ\n\n      dispatch({\n        type: ADD_TO_CART,\n        payload: {\n          product: data.product._id,\n          name: data.product.name,\n          price: newPrice,\n          // Dùng giá mới đã tính toán\n          image: data.product.images[0].url,\n          stock: data.product.stock,\n          quantity: updatedQuantity,\n          size // Lưu kích thước vào giỏ hàng\n\n        }\n      });\n    } else {\n      // Nếu sản phẩm chưa có trong giỏ, thêm sản phẩm mới vào giỏ\n      dispatch({\n        type: ADD_TO_CART,\n        payload: {\n          product: data.product._id,\n          name: data.product.name,\n          price: newPrice,\n          // Dùng giá mới đã tính toán\n          image: data.product.images[0].url,\n          stock: data.product.stock,\n          quantity,\n          size // Lưu kích thước vào giỏ hàng\n\n        }\n      });\n    } // Lưu giỏ hàng vào localStorage\n\n\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n  } catch (error) {\n    console.error(\"Error adding item to cart:\", error); // Bạn có thể dispatch một hành động để lưu lỗi nếu cần thiết\n  }\n};\nexport const removeItemFromCart = id => async (dispatch, getState) => {\n  dispatch({\n    type: REMOVE_ITEM_CART,\n    payload: id\n  }); // Lưu lại giỏ hàng sau khi xóa\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n};\nexport const saveShippingInfo = data => async dispatch => {\n  dispatch({\n    type: SAVE_SHIPPING_INFO,\n    payload: data\n  });\n  localStorage.setItem('shippingInfo', JSON.stringify(data));\n};","map":{"version":3,"sources":["C:/Users/This PC/OneDrive/Desktop/doan/doan/doan_tiemPizza/frontend/src/actions/cartActions.js"],"names":["axios","ADD_TO_CART","REMOVE_ITEM_CART","SAVE_SHIPPING_INFO","addItemToCart","id","quantity","size","dispatch","getState","data","get","newPrice","product","price","existingItem","cart","cartItems","find","item","updatedQuantity","type","payload","_id","name","image","images","url","stock","localStorage","setItem","JSON","stringify","error","console","removeItemFromCart","saveShippingInfo"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { ADD_TO_CART, REMOVE_ITEM_CART, SAVE_SHIPPING_INFO } from '../constants/cartConstants';\n\nexport const addItemToCart = (id, quantity, size) => async (dispatch, getState) => {\n    try {\n        const { data } = await axios.get(`/api/v1/product/${id}`);\n\n        // Tính toán giá mới nếu kích thước là 12 inch\n        const newPrice = size === '12 inch' ? data.product.price * 1.3 : data.product.price;\n\n        // Kiểm tra xem sản phẩm đã có trong giỏ hàng chưa, nếu có thì cập nhật số lượng\n        const existingItem = getState().cart.cartItems.find(item => item.product === id);\n\n        if (existingItem) {\n            // Nếu sản phẩm đã có trong giỏ hàng, cập nhật số lượng và giá mới\n            const updatedQuantity = existingItem.quantity + quantity; // Cộng thêm số lượng vào giỏ\n            dispatch({\n                type: ADD_TO_CART,\n                payload: {\n                    product: data.product._id,\n                    name: data.product.name,\n                    price: newPrice,  // Dùng giá mới đã tính toán\n                    image: data.product.images[0].url,\n                    stock: data.product.stock,\n                    quantity: updatedQuantity,\n                    size,  // Lưu kích thước vào giỏ hàng\n                }\n            });\n        } else {\n            // Nếu sản phẩm chưa có trong giỏ, thêm sản phẩm mới vào giỏ\n            dispatch({\n                type: ADD_TO_CART,\n                payload: {\n                    product: data.product._id,\n                    name: data.product.name,\n                    price: newPrice,  // Dùng giá mới đã tính toán\n                    image: data.product.images[0].url,\n                    stock: data.product.stock,\n                    quantity,\n                    size,  // Lưu kích thước vào giỏ hàng\n                }\n            });\n        }\n\n        // Lưu giỏ hàng vào localStorage\n        localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n    } catch (error) {\n        console.error(\"Error adding item to cart:\", error);\n        // Bạn có thể dispatch một hành động để lưu lỗi nếu cần thiết\n    }\n}\n\nexport const removeItemFromCart = (id) => async (dispatch, getState) => {\n    dispatch({\n        type: REMOVE_ITEM_CART,\n        payload: id\n    });\n\n    // Lưu lại giỏ hàng sau khi xóa\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n}\n\nexport const saveShippingInfo = (data) => async (dispatch) => {\n    dispatch({\n        type: SAVE_SHIPPING_INFO,\n        payload: data\n    });\n\n    localStorage.setItem('shippingInfo', JSON.stringify(data));\n}\n"]},"metadata":{},"sourceType":"module"}